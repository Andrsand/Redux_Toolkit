{"ast":null,"code":"var _jsxFileName = \"/media/andrey/free/\\u041F\\u0435\\u0440\\u0435\\u043A\\u0438\\u0434 \\u0441 mint 18.03.23/Coding/Web/Redux_Toolkit/src/components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo } from '../features/todo/todoSlice';\nimport { v4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const dispatch = useDispatch(); // создаем объект dispatch \n\n  const [todoValue, setTodoValue] = React.useState(''); // стейт для текстового поля\n\n  const addTodoHandler = () => {\n    // функция создания todo с соответсвующими полями:\n    const todo = {\n      id: v4(),\n      // автоматическое генерирование id с помощью uuid\n      text: todoValue,\n      // в поле text лежит значение из стейта todoValue\n      completed: false\n    };\n    dispatch(addTodo(todo)); // вызываем функцию dispatch с экшном addTodo где параметром будет наша todo\n\n    setTodoValue(''); // чистим нашу todo \n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"w-full flex\",\n    onSubmit: e => e.preventDefault(),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: todoValue // значение из стейта\n      ,\n      placeholder: \"Type something...\",\n      onChange: e => setTodoValue(e.target.value) // при изменении поля формы помещем value в стейт todoValue\n      ,\n      className: \"w-full p-1 focus:outline-none focus:border-lime-500 focus: border-2 placeholder:text-sm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"shrink-0 bg-lime-300  hover:bg-lime-400 transition-all px-3 text-sm\",\n      onClick: () => addTodoHandler() // вешаем на onClick наш addTodoHandler\n      ,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"mSSne9/fmOHMuERqRVIydJobDvg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/media/andrey/free/Перекид с mint 18.03.23/Coding/Web/Redux_Toolkit/src/components/Form.js"],"names":["React","useDispatch","addTodo","v4","Form","dispatch","todoValue","setTodoValue","useState","addTodoHandler","todo","id","text","completed","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,EAAT,QAAmB,MAAnB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CADe,CACgB;;AAC/B,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAlC,CAFe,CAEsC;;AAErD,QAAMC,cAAc,GAAG,MAAM;AAAE;AAC3B,UAAMC,IAAI,GAAG;AACTC,MAAAA,EAAE,EAAER,EAAE,EADG;AACc;AACvBS,MAAAA,IAAI,EAAEN,SAFG;AAEc;AACvBO,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKAR,IAAAA,QAAQ,CAACH,OAAO,CAACQ,IAAD,CAAR,CAAR,CANyB,CAMD;;AACxBH,IAAAA,YAAY,CAAC,EAAD,CAAZ,CAPyB,CAOR;AACpB,GARD;;AASA,sBACI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAA8B,IAAA,QAAQ,EAAGO,CAAD,IAAOA,CAAC,CAACC,cAAF,EAA/C;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,KAAK,EAAET,SAFX,CAEsB;AAFtB;AAGI,MAAA,WAAW,EAAC,mBAHhB;AAII,MAAA,QAAQ,EAAGQ,CAAD,IAAOP,YAAY,CAACO,CAAC,CAACE,MAAF,CAASC,KAAV,CAJjC,CAImD;AAJnD;AAKI,MAAA,SAAS,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,qEAFd;AAGI,MAAA,OAAO,EAAE,MAAMR,cAAc,EAHjC,CAGqC;AAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA/BD;;GAAML,I;UACeH,W;;;KADfG,I;AAiCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addTodo } from '../features/todo/todoSlice'\nimport { v4 } from 'uuid'\n\nconst Form = () => {\n    const dispatch = useDispatch() // создаем объект dispatch \n    const [todoValue, setTodoValue] = React.useState('') // стейт для текстового поля\n\n    const addTodoHandler = () => { // функция создания todo с соответсвующими полями:\n        const todo = {\n            id: v4(),              // автоматическое генерирование id с помощью uuid\n            text: todoValue,       // в поле text лежит значение из стейта todoValue\n            completed: false,\n        }\n        dispatch(addTodo(todo)) // вызываем функцию dispatch с экшном addTodo где параметром будет наша todo\n        setTodoValue('') // чистим нашу todo \n    }\n    return (\n        <form className='w-full flex' onSubmit={(e) => e.preventDefault()}>\n            <input\n                type='text'\n                value={todoValue} // значение из стейта\n                placeholder='Type something...'\n                onChange={(e) => setTodoValue(e.target.value)} // при изменении поля формы помещем value в стейт todoValue\n                className='w-full p-1 focus:outline-none focus:border-lime-500 focus: border-2 placeholder:text-sm'\n            />\n            <button\n                type='submit'\n                className='shrink-0 bg-lime-300  hover:bg-lime-400 transition-all px-3 text-sm'\n                onClick={() => addTodoHandler()} // вешаем на onClick наш addTodoHandler\n            >\n                Submit\n            </button>\n        </form>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}